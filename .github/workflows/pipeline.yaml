name: Analytics CI/CD

on:
  push:
    branches:
      - main
      - setup_CI
  pull_request:
    branches:
      - main

jobs:
  run-ci:
    uses: W18BTANGO/ci-cd/.github/workflows/integrate.yaml@main

  deploy:
    uses:  W18BTANGO/ci-cd/.github/workflows/deploy.yaml@main
    with:
      aws-region: ap-southeast-2                        
      ecr-repository: analyticsamd                      
      ecs-service: analyticsEC2service                  
      ecs-cluster: AnalyticsClusterEC2                  
      ecs-task-definition: .aws/td2-amd-revision2.json                      
      container-name: analyticsamd                     
                                                       
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Run CI steps
        uses: ./.github/actions/action-ci 

  continuous_deployment:
    runs-on: ubuntu-latest
    needs: continuous_integration
    env:
      AWS_REGION: ap-southeast-2
      ECR_REPOSITORY: preprocessing
      IMAGE_TAG: latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run CD steps
        uses: ./.github/actions/action-cd
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-html pdfkit

      - name: Run unit tests with coverage and generate HTML report
        run: |
          pytest --cov=app --cov-report=html --cov-report=xml --cov-fail-under=85 --html=report.html --self-contained-html tests

      - name: Convert HTML report to PDF
        run: |
          python -m pdfkit report.html report.pdf

      - name: Verify PDF report
        run: |
          if [ ! -f "report.pdf" ]; then
            echo "Error: PDF report not generated."
            exit 1
          fi

      - name: Upload PDF report
        uses: actions/upload-artifact@v4
        with:
          name: testing-report
          path: report.pdf

